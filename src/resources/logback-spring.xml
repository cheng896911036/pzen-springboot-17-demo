<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--    获取项目名称    -->
    <springProperty scope="context" name="PROJECT_NAME" source="spring.application.name"/>
    <!-- 日志存放路径，建议在application.yml中配置 -->
    <springProperty scope="context" name="LOG_PATH" source="logging.file.path"/>
    <!-- 日志最大保留天数，解注并配置 -->
    <springProperty scope="context" name="MAX_HISTORY" source="logging.logback.rollingpolicy.max-history"/>
    <!-- 日志文件大小限制，解注并配置 -->
    <springProperty scope="context" name="MAX_FILE_SIZE" source="logging.logback.rollingpolicy.max-file-size"/>

    <!-- 日志输出格式 -->
    <property name="LOG_PATTERN"
              value="[%d{HH:mm:ss.SSS}] [%thread] [%-5level] [行号：%-4L] [文件名：%F] %logger{36} - [%method,%line] - %msg%n"/>

    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 系统日志输出 -->
    <appender name="file_info" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${PROJECT_NAME}-info.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${LOG_PATH}/${PROJECT_NAME}-info.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志文件大小限制 -->
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <!-- 日志最大的历史 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>INFO</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="file_error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${PROJECT_NAME}-error.log</file>
        <!-- 循环政策：基于时间创建日志文件 -->
        <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 日志文件名格式 -->
            <fileNamePattern>${LOG_PATH}/${PROJECT_NAME}-error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志文件大小限制 -->
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <!-- 日志最大的历史 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 过滤的级别 -->
            <level>ERROR</level>
            <!-- 匹配时的操作：接收（记录） -->
            <onMatch>ACCEPT</onMatch>
            <!-- 不匹配时的操作：拒绝（不记录） -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 用户访问日志输出  -->
    <appender name="sys-user" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${PROJECT_NAME}-user.log</file>
        <!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${LOG_PATH}/${PROJECT_NAME}-user.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
            <!-- 日志文件大小限制 -->
            <maxFileSize>${MAX_FILE_SIZE}</maxFileSize>
            <!-- 日志最大的历史 -->
            <maxHistory>${MAX_HISTORY}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${LOG_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- 系统模块日志级别控制  -->
    <logger name="com.ruoyi" level="info"/>
    <!-- Spring日志级别控制  -->
    <logger name="org.springframework" level="debug"/>

    <!--    Ebean log控制-->
    <logger name="io.ebean.DDL" level="TRACE"/>

    <logger name="io.ebean.SQL" level="TRACE"/>
    <logger name="io.ebean.TXN" level="TRACE"/>
    <logger name="io.ebean.SUM" level="TRACE"/>

    <!-- L2 logging -->
    <logger name="io.ebean.cache.QUERY" level="TRACE"/>
    <logger name="io.ebean.cache.BEAN" level="TRACE"/>
    <logger name="io.ebean.cache.COLL" level="TRACE"/>
    <logger name="io.ebean.cache.NATKEY" level="TRACE"/>

    <!-- Elastic logging -->
    <logger name="io.ebean.ELA" level="TRACE"/>
    <logger name="io.ebean.ELQ" level="TRACE"/>
    <logger name="io.ebean.BULK" level="TRACE"/>

    <!-- Testing with Docker containers -->
    <logger name="io.ebean.docker" level="TRACE"/>

    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="file_info"/>
        <appender-ref ref="file_error"/>
        <appender-ref ref="sys-user"/>
    </root>
</configuration>
